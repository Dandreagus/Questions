{"version":3,"sources":["api/index.js","components/Section.js","App.js","reportWebVitals.js","index.js","Styles/App.module.css","Styles/Section.module.css"],"names":["fetch","then","res","json","results","Section","num","questio","category","difficulty","questionCod","replace","className","styles","card","App","useState","questions","setQuestions","currentQuestion","setCurrentQuestion","status","setStatus","points","setPoints","color","setColor","question","useEffect","api","console","log","playAgain","onClick","window","location","reload","container","length","incorrect_answers","correct_answer","sort","a","b","localeCompare","map","answer","style","backgroundColor","type","setTimeout","pointFunc","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"6MAAe,EACP,kBACJA,MAAM,yCACHC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACC,GAAD,OAASA,EAAIE,Y,uBCYVC,EAfC,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,IAAKC,EAAoC,EAApCA,QAASC,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,WACnCC,EAAcH,EACjBI,QAAQ,UAAW,KACnBA,QAAQ,UAAW,KACnBA,QAAQ,YAAa,QAExB,OACE,sBAAKC,UAAWC,IAAOC,KAAvB,UACE,yBAASF,UAAWC,IAAOP,IAA3B,SAAiCA,IACjC,kCAAUI,IACV,sCAAOF,EAAP,cAAqBC,SCsEZM,MA5Ef,WAAgB,IAAD,EACqBC,mBAAS,IAD9B,mBACNC,EADM,KACKC,EADL,OAEiCF,mBAAS,GAF1C,mBAENG,EAFM,KAEWC,EAFX,OAGeJ,mBAAS,WAHxB,mBAGNK,EAHM,KAGEC,EAHF,OAIeN,mBAAS,GAJxB,mBAINO,EAJM,KAIEC,EAJF,OAKaR,mBAAS,IALtB,mBAKNS,EALM,KAKCC,EALD,KAMPC,EAAWV,EAAUE,GAmC3B,OARAS,qBAAU,WACRC,IAAW5B,MAAK,SAAC0B,GACfT,EAAaS,GACbL,EAAU,gBAEX,IAEHQ,QAAQC,IAAIV,GACG,YAAXA,EAA6B,8CAClB,aAAXA,EAEA,sBAAKT,UAAWC,IAAOmB,UAAvB,UACE,yDAA4BT,KAC5B,wBAAQU,QAAS,kBAAMC,OAAOC,SAASC,UAAvC,2BAMJ,sBAAKxB,UAAWC,IAAOwB,UAAvB,UACE,cAAC,EAAD,CACE7B,SAAUmB,EAASnB,SACnBC,WAAYkB,EAASlB,WACrBF,QAASoB,EAASA,SAClBrB,IAAG,UAAKa,EAAkB,EAAvB,cAA8BF,EAAUqB,OAAxC,OAEJ,sBAAIX,EAASY,mBAAb,CAAgCZ,EAASa,iBACvCC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MAC/BE,KAAI,SAACC,GAAD,OACH,wBAEEC,MAAO,CACLC,gBAAiBvB,IAAUqB,EAAS,QAAU,IAEhDb,QAAS,kBA3DD,SAACa,GACjB,GAAIA,IAAWnB,EAASa,eAEtB,OADAd,EAASoB,GACDnB,EAASsB,MACf,IAAK,WACHzB,EAAUD,EAAS,IACnB,MAEF,IAAK,UACHC,EAAUD,EAAS,GACnB,MAEF,QACE,OAGFJ,EAAkB,IAAMF,EAAUqB,OACpChB,EAAU,YAEV4B,YAAW,WACT9B,EAAmBD,EAAkB,KACpC,KAsCkBgC,CAAUL,IAL3B,SAOGA,GANIA,UCxDFM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBrD,MAAK,YAAkD,IAA/CsD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K,kBCfAa,EAAOC,QAAU,CAAC,UAAY,uBAAuB,UAAY,yB,kBCAjED,EAAOC,QAAU,CAAC,KAAO,sBAAsB,IAAM,wB","file":"static/js/main.546816bc.chunk.js","sourcesContent":["export default {\r\n  call: () =>\r\n    fetch(\"https://opentdb.com/api.php?amount=10\")\r\n      .then((res) => res.json())\r\n      .then((res) => res.results),\r\n};\r\n","import styles from \"../Styles/Section.module.css\";\r\nconst Section = ({ num, questio, category, difficulty }) => {\r\n  const questionCod = questio\r\n    .replace(/&quot;/g, '\"')\r\n    .replace(/&#039;/g, \"'\")\r\n    .replace(/&eacute;/g, \"Ã©\");\r\n\r\n  return (\r\n    <div className={styles.card}>\r\n      <section className={styles.num}>{num}</section>\r\n      <section>{questionCod}</section>\r\n      <p>{`${category} : ${difficulty}`}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n","import styles from \"./Styles/App.module.css\";\nimport api from \"./api/\";\nimport React, { useState, useEffect } from \"react\";\nimport Section from \"./components/Section\";\n\nfunction App() {\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [status, setStatus] = useState(\"loading\");\n  const [points, setPoints] = useState(0);\n  const [color, setColor] = useState(\"\");\n  const question = questions[currentQuestion];\n\n  const pointFunc = (answer) => {\n    if (answer === question.correct_answer) {\n      setColor(answer);\n      switch (question.type) {\n        case \"multiple\": {\n          setPoints(points + 10);\n          break;\n        }\n        case \"boolean\": {\n          setPoints(points + 5);\n          break;\n        }\n        default:\n          return;\n      }\n    }\n    if (currentQuestion + 1 === questions.length) {\n      setStatus(\"finished\");\n    } else {\n      setTimeout(() => {\n        setCurrentQuestion(currentQuestion + 1);\n      }, 1000);\n    }\n  };\n\n  useEffect(() => {\n    api.call().then((question) => {\n      setQuestions(question);\n      setStatus(\"pending\");\n    });\n  }, []);\n\n  console.log(status);\n  if (status === \"loading\") return <span>Loading...</span>;\n  if (status === \"finished\") {\n    return (\n      <div className={styles.playAgain}>\n        <span>Your points earned: ${points}</span>\n        <button onClick={() => window.location.reload()}>Play again</button>\n      </div>\n    );\n  }\n\n  return (\n    <div className={styles.container}>\n      <Section\n        category={question.category}\n        difficulty={question.difficulty}\n        questio={question.question}\n        num={`${currentQuestion + 1} / ${questions.length} `}\n      ></Section>\n      {[...question.incorrect_answers, question.correct_answer]\n        .sort((a, b) => a.localeCompare(b))\n        .map((answer) => (\n          <button\n            key={answer}\n            style={{\n              backgroundColor: color === answer ? \"green\" : \"\",\n            }}\n            onClick={() => pointFunc(answer)}\n          >\n            {answer}\n          </button>\n        ))}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__li0uw\",\"playAgain\":\"App_playAgain__3jjyj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Section_card__2WeSe\",\"num\":\"Section_num__1ySya\"};"],"sourceRoot":""}